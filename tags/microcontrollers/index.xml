<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>microcontrollers on The Adventures of Arran Short</title><link>https://arranshort.xyz/tags/microcontrollers/</link><description>Recent content in microcontrollers on The Adventures of Arran Short</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 04 Jul 2020 22:52:01 +0000</lastBuildDate><atom:link href="https://arranshort.xyz/tags/microcontrollers/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting the cogs turning for My Open Source Engine ECU</title><link>https://arranshort.xyz/post/starting-my-open-source-engine-ecu/</link><pubDate>Sat, 04 Jul 2020 22:52:01 +0000</pubDate><guid>https://arranshort.xyz/post/starting-my-open-source-engine-ecu/</guid><description>After moving my TMS750 development kit from box to box I&amp;rsquo;ve recently decided to see if there had been any community progress on getting the hardware angle clock (HWAG) working.
The tl;dr seems to be that a few have tried but came up against a possible hardware bug making it practically useless. I&amp;rsquo;ve even asked on the TI forums for example code but they don&amp;rsquo;t have any.
My aim for this ECU is to have a fully open source, highly versatile and precise base to be used on affordable hardware.</description></item><item><title>CAN to USB on a budget with Nucleo-f072rb part 1</title><link>https://arranshort.xyz/post/can-to-usb-on-a-budget-with-nucleo-f072rb-part-1/</link><pubDate>Sun, 13 Oct 2019 14:30:34 +0000</pubDate><guid>https://arranshort.xyz/post/can-to-usb-on-a-budget-with-nucleo-f072rb-part-1/</guid><description>I&amp;rsquo;ve been looking to get back into CANbus hacking but all my USB to CAN boards are a bit of a bodge and after recently wasting an evening trying to get one to work again I&amp;rsquo;ve decided I want to scrap everything and start again with a known good USB to CAN tool that does the job everytime.
I&amp;rsquo;ve seen various boards crop up on hackaday but most just emulate the lawciel serial protocol so consistancy at high bus load isn&amp;rsquo;t great.</description></item><item><title>BMW 1 series F20 iDrive controller hacking with arduino and PI</title><link>https://arranshort.xyz/post/bmw-1-series-f20-idrive-controller/</link><pubDate>Wed, 01 Feb 2017 14:51:00 +0000</pubDate><guid>https://arranshort.xyz/post/bmw-1-series-f20-idrive-controller/</guid><description>As part of a larger in car entertainment project, I needed a simple and safe input method to control the software that wasn’t a touch screen. As BMWs are popular in the car PC scene I thought I’d buy an IDrive controller as surely there will be an Arduino lib to get it working.
Nope, there are a few pages of people giving out tiny bits of information or claiming to have done it but haven’t shared it on the Web.</description></item></channel></rss>